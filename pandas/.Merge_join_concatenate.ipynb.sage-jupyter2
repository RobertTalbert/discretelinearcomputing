{"type":"settings","kernel":"anaconda3","backend_state":"running","trust":true,"kernel_usage":{"cpu":0,"memory":116891648},"kernel_state":"idle"}
{"type":"file","last_load":1515096910655}
{"exec_count":1,"start":1515096998652,"input":"import pandas as pd\nimport numpy as np","state":"done","pos":0,"type":"cell","end":1515096999336,"id":"69be9c","kernel":"anaconda3"}
{"type":"cell","id":"df13fb","pos":1,"input":"# Merge, join, concatenate\n\n## Concatenating","cell_type":"markdown"}
{"exec_count":3,"start":1515097231588,"input":"sec01_grades = pd.DataFrame({\n'hw': [10, 9, 4], \n'pp': ['E', 'R', 'E'],\n'gp': ['Pass', 'Pass', 'Pass']}, \n       index=['Alice', 'Bob', 'Chuck'])","state":"done","pos":2,"type":"cell","end":1515097231651,"id":"677792","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gp</th>\n      <th>hw</th>\n      <th>pp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alice</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Bob</th>\n      <td>Pass</td>\n      <td>9</td>\n      <td>R</td>\n    </tr>\n    <tr>\n      <th>Chuck</th>\n      <td>Pass</td>\n      <td>4</td>\n      <td>E</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":4}},"exec_count":4,"start":1515097242266,"input":"sec01_grades","state":"done","pos":3,"type":"cell","end":1515097242274,"id":"a953cc","kernel":"anaconda3"}
{"exec_count":5,"start":1515097279365,"input":"sec02_grades = pd.DataFrame({\n'hw': [8, 10, 1], \n'pp': ['E', 'M', 'N'],\n'gp': ['Pass', 'Pass', 'No Pass']}, \n       index=['Doug', 'Eve', 'Fred'])","state":"done","pos":4,"type":"cell","end":1515097279369,"id":"0c77e9","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gp</th>\n      <th>hw</th>\n      <th>pp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Doug</th>\n      <td>Pass</td>\n      <td>8</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Eve</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>Fred</th>\n      <td>No Pass</td>\n      <td>1</td>\n      <td>N</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":6}},"exec_count":6,"start":1515097282252,"input":"sec02_grades","state":"done","pos":5,"type":"cell","end":1515097282257,"id":"81d3ba","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gp</th>\n      <th>hw</th>\n      <th>pp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alice</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Bob</th>\n      <td>Pass</td>\n      <td>9</td>\n      <td>R</td>\n    </tr>\n    <tr>\n      <th>Chuck</th>\n      <td>Pass</td>\n      <td>4</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Doug</th>\n      <td>Pass</td>\n      <td>8</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Eve</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>Fred</th>\n      <td>No Pass</td>\n      <td>1</td>\n      <td>N</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":7}},"exec_count":7,"start":1515097312269,"input":"# Glue these together vertically by passing a list of data frames\n\npd.concat([sec01_grades, sec02_grades])","state":"done","pos":6,"type":"cell","end":1515097312276,"id":"bcecc8","kernel":"anaconda3"}
{"exec_count":8,"start":1515097413113,"input":"sec01_extra = pd.DataFrame({\n'ec': [53, 54, 24], \n'fe': [100, 90, 80]}, \n       index=['Alice', 'Bob', 'Chuck'])","state":"done","pos":7,"type":"cell","end":1515097413150,"id":"530687","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gp</th>\n      <th>hw</th>\n      <th>pp</th>\n      <th>ec</th>\n      <th>fe</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alice</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>E</td>\n      <td>53</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>Bob</th>\n      <td>Pass</td>\n      <td>9</td>\n      <td>R</td>\n      <td>54</td>\n      <td>90</td>\n    </tr>\n    <tr>\n      <th>Chuck</th>\n      <td>Pass</td>\n      <td>4</td>\n      <td>E</td>\n      <td>24</td>\n      <td>80</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":9}},"exec_count":9,"input":"# Put them together horizontally by specifying axis = 1\n\npd.concat([sec01_grades, sec01_extra], axis=1)","state":"done","pos":8,"type":"cell","id":"294638","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gp</th>\n      <th>hw</th>\n      <th>pp</th>\n      <th>ec</th>\n      <th>fe</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alice</th>\n      <td>Pass</td>\n      <td>10.0</td>\n      <td>E</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Bob</th>\n      <td>Pass</td>\n      <td>9.0</td>\n      <td>R</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Chuck</th>\n      <td>Pass</td>\n      <td>4.0</td>\n      <td>E</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>53.0</td>\n      <td>100.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>54.0</td>\n      <td>90.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>24.0</td>\n      <td>80.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":12}},"exec_count":12,"start":1515097494753,"input":"# What if you leave off the index? \n\nsec01_extra = pd.DataFrame({\n'ec': [53, 54, 24], \n'fe': [100, 90, 80]}) \n\npd.concat([sec01_grades, sec01_extra], axis=1)","state":"done","pos":9,"type":"cell","end":1515097494767,"id":"4469cc","kernel":"anaconda3"}
{"exec_count":13,"start":1515097519342,"input":"# Answer: Pandas has no way of knowing that the new data was supposed to go with the old ones. ","state":"done","pos":10,"type":"cell","end":1515097519345,"id":"86d659","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gp</th>\n      <th>hw</th>\n      <th>pp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alice</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Bob</th>\n      <td>Pass</td>\n      <td>9</td>\n      <td>R</td>\n    </tr>\n    <tr>\n      <th>Chuck</th>\n      <td>Pass</td>\n      <td>4</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Doug</th>\n      <td>Pass</td>\n      <td>8</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <th>Eve</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>M</td>\n    </tr>\n    <tr>\n      <th>Fred</th>\n      <td>No Pass</td>\n      <td>1</td>\n      <td>N</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":17}},"exec_count":17,"start":1515097782059,"input":"# The .append method does the same thing as concat: \n\nsec01_grades.append(sec02_grades)","state":"done","pos":11,"type":"cell","end":1515097782067,"id":"f3790c","kernel":"anaconda3"}
{"type":"cell","id":"c9e1da","pos":12,"input":"## Merging","cell_type":"markdown"}
{"exec_count":18,"start":1515098630013,"input":"sec01_more = pd.DataFrame({\n'gp': ['Pass', 'Pass', 'Pass'],\n'brownie_points':[22, 33,44]}, \n       index=['Alice', 'Bob', 'Chuck'])","state":"done","pos":13,"type":"cell","end":1515098630017,"id":"448c52","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gp</th>\n      <th>hw</th>\n      <th>pp</th>\n      <th>brownie_points</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>E</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>E</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Pass</td>\n      <td>10</td>\n      <td>E</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Pass</td>\n      <td>9</td>\n      <td>R</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pass</td>\n      <td>9</td>\n      <td>R</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Pass</td>\n      <td>9</td>\n      <td>R</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Pass</td>\n      <td>4</td>\n      <td>E</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Pass</td>\n      <td>4</td>\n      <td>E</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Pass</td>\n      <td>4</td>\n      <td>E</td>\n      <td>44</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":19}},"exec_count":19,"start":1515098658250,"input":"pd.merge(sec01_grades, sec01_more, on='gp')","state":"done","pos":14,"type":"cell","end":1515098658276,"id":"73c6f1","kernel":"anaconda3"}
{"type":"cell","id":"07efa0","pos":15,"input":""}