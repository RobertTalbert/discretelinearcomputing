{"type":"file","last_load":1515252215145}
{"type":"settings","backend_state":"running","trust":true,"kernel":"anaconda3","kernel_usage":{"cpu":0,"memory":142262272},"kernel_state":"idle"}
{"exec_count":1,"start":1515252223048,"input":"import pandas as pd\nimport numpy as np","state":"done","pos":0,"type":"cell","end":1515252223508,"id":"b4c1bb","kernel":"anaconda3"}
{"type":"cell","id":"e92a13","pos":1,"input":"# Time Series ","cell_type":"markdown"}
{"exec_count":10,"start":1515252473339,"input":"# Create a range of 24 hours starting with midnight tonight\n\nrng = pd.date_range('2018-01-07',periods = 24, freq=\"H\")","state":"done","pos":2,"cell_type":"code","type":"cell","end":1515252473342,"id":"ef856e","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"DatetimeIndex(['2018-01-07 00:00:00', '2018-01-07 01:00:00',\n               '2018-01-07 02:00:00', '2018-01-07 03:00:00',\n               '2018-01-07 04:00:00', '2018-01-07 05:00:00',\n               '2018-01-07 06:00:00', '2018-01-07 07:00:00',\n               '2018-01-07 08:00:00', '2018-01-07 09:00:00',\n               '2018-01-07 10:00:00', '2018-01-07 11:00:00',\n               '2018-01-07 12:00:00', '2018-01-07 13:00:00',\n               '2018-01-07 14:00:00', '2018-01-07 15:00:00',\n               '2018-01-07 16:00:00', '2018-01-07 17:00:00',\n               '2018-01-07 18:00:00', '2018-01-07 19:00:00',\n               '2018-01-07 20:00:00', '2018-01-07 21:00:00',\n               '2018-01-07 22:00:00', '2018-01-07 23:00:00'],\n              dtype='datetime64[ns]', freq='H')"},"exec_count":11}},"exec_count":11,"start":1515252476055,"input":"rng","state":"done","pos":3,"type":"cell","end":1515252476068,"id":"5621c8","kernel":"anaconda3"}
{"exec_count":12,"start":1515252529949,"input":"# Use the dates as an index\n\ns = pd.Series(np.random.rand(len(rng)), index=rng)","state":"done","pos":4,"type":"cell","end":1515252529952,"id":"f5d0db","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"2018-01-07 00:00:00    0.421571\n2018-01-07 01:00:00    0.699927\n2018-01-07 02:00:00    0.864974\n2018-01-07 03:00:00    0.746306\n2018-01-07 04:00:00    0.311862\nFreq: H, dtype: float64"},"exec_count":13}},"exec_count":13,"start":1515252534649,"input":"s.head()","state":"done","pos":5,"type":"cell","end":1515252534672,"id":"abd535","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"2018-01-07 00:00:00    0.421571\n2018-01-07 01:00:00    0.699927\n2018-01-07 02:00:00    0.864974\n2018-01-07 03:00:00    0.746306\n2018-01-07 04:00:00    0.311862\n2018-01-07 05:00:00    0.646831\n2018-01-07 06:00:00    0.402041\n2018-01-07 07:00:00    0.913358\n2018-01-07 08:00:00    0.679883\n2018-01-07 09:00:00    0.157152\n2018-01-07 10:00:00    0.097058\n2018-01-07 11:00:00    0.975317\nFreq: H, dtype: float64"},"exec_count":15}},"exec_count":15,"start":1515252554852,"input":"s[:12]","state":"done","pos":6,"type":"cell","end":1515252554874,"id":"80cf05","kernel":"anaconda3"}
{"exec_count":18,"start":1515252740947,"input":"# Change frequency to 45 minutes and \"forward fill\"\n\nconverted = s.asfreq('45min', method='pad')\n\n# 'pad' takes the last valid observation and propagates it forward","state":"done","pos":7,"type":"cell","end":1515252740957,"id":"dd4b25","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"2018-01-07 00:00:00    0.421571\n2018-01-07 00:45:00    0.421571\n2018-01-07 01:30:00    0.699927\n2018-01-07 02:15:00    0.864974\n2018-01-07 03:00:00    0.746306\nFreq: 45T, dtype: float64"},"exec_count":19}},"exec_count":19,"start":1515252742948,"input":"converted.head()","state":"done","pos":8,"type":"cell","end":1515252742969,"id":"ac6351","kernel":"anaconda3"}
{"output":{"0":{"data":{"text/plain":"2018-01-07 00:00:00    0.615245\n2018-01-07 06:00:00    0.537468\n2018-01-07 12:00:00    0.271401\n2018-01-07 18:00:00    0.513456\nFreq: 6H, dtype: float64"},"exec_count":22}},"exec_count":22,"start":1515253393149,"input":"# \"s\" is currently listed hourly. We can _resample_ to change the frequency and \n# use some kind of function to give us the summary.\n# E.g. 6 hour means: \n\ns.resample('6H').mean()","state":"done","pos":9,"type":"cell","end":1515253393177,"id":"48bbbf","kernel":"anaconda3"}
{"type":"cell","id":"e539d7","pos":10,"input":""}