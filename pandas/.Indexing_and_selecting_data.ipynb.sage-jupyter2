{"type":"settings","kernel":"anaconda3","backend_state":"running","metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.4"}},"kernel_usage":{"cpu":0,"memory":85577728},"kernel_state":"idle"}
{"type":"cell","id":"ba7fd4","pos":41,"input":"## Selection by callable\n\nYou can pass a lambda to a data frame just like you can anything else. ","cell_type":"markdown"}
{"type":"cell","id":"5ade1c","pos":0,"input":"# Indexing and selecting data\n\nhttp://pandas.pydata.org/pandas-docs/stable/indexing.html ","cell_type":"markdown"}
{"type":"cell","id":"29f123","pos":61,"input":"my_index = pd.Index(['a','b','c','d','f'])\ntype(my_index)\n\ncolumns = pd.Index(['Homework', 'Tests', 'Final Exam'])\n\ndf = pd.DataFrame(np.random.randn(5,3), index = my_index, columns = columns)\n\ndf","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Homework</th>\n      <th>Tests</th>\n      <th>Final Exam</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>a</th>\n      <td>-1.574986</td>\n      <td>0.150297</td>\n      <td>0.686080</td>\n    </tr>\n    <tr>\n      <th>b</th>\n      <td>0.315615</td>\n      <td>-1.664547</td>\n      <td>-1.757779</td>\n    </tr>\n    <tr>\n      <th>c</th>\n      <td>1.173149</td>\n      <td>-0.941015</td>\n      <td>0.057408</td>\n    </tr>\n    <tr>\n      <th>d</th>\n      <td>0.043962</td>\n      <td>-1.173853</td>\n      <td>-0.350653</td>\n    </tr>\n    <tr>\n      <th>f</th>\n      <td>-0.912411</td>\n      <td>1.003285</td>\n      <td>0.228033</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":49}},"cell_type":"code","exec_count":49}
{"type":"cell","id":"9f21ca","pos":18,"input":"# Can also set values this way:\ndf.B[1] = 3.14159\ndf.B","output":{"0":{"data":{"text/plain":"2017-01-01    1.938955\n2017-01-02    3.141590\n2017-01-03   -1.258297\n2017-01-04   -1.226532\n2017-01-05    0.335953\n2017-01-06    1.244997\n2017-01-07    0.095643\n2017-01-08   -0.729438\n2017-01-09   -0.867045\n2017-01-10   -0.014276\nFreq: D, Name: B, dtype: float64"},"output_type":"execute_result","exec_count":15}},"cell_type":"code","exec_count":15}
{"type":"cell","id":"4b451f","pos":21,"input":"grades[:3]\n\n# Note `grades[3]` throws an error","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":17}},"cell_type":"code","exec_count":17}
{"type":"cell","id":"fe658c","pos":27,"input":"grades.loc[:'St']","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>20</td>\n      <td>3</td>\n      <td>3</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4</td>\n      <td>3</td>\n      <td>22</td>\n      <td>15</td>\n      <td>4</td>\n      <td>4</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>0</td>\n      <td>11</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>28</td>\n      <td>24</td>\n      <td>5</td>\n      <td>5</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":21}},"cell_type":"code","exec_count":21}
{"type":"cell","id":"fe3212","pos":37,"input":"grades.iloc[10:15]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":30}},"cell_type":"code","exec_count":30}
{"type":"cell","id":"46083d","pos":42,"input":"# This is just a toy example\n# It does the same thing as `grades[grades.gp > 20]`\ngrades[lambda grades: grades.gp > 20]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>20</td>\n      <td>3</td>\n      <td>3</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4</td>\n      <td>3</td>\n      <td>22</td>\n      <td>15</td>\n      <td>4</td>\n      <td>4</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>0</td>\n      <td>11</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>28</td>\n      <td>24</td>\n      <td>5</td>\n      <td>5</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n      <td>22</td>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":34}},"cell_type":"code","exec_count":34}
{"type":"cell","id":"36d990","pos":33,"input":"# Summary stats for each graded item, for students with GP scores higher than 20\n\ngrades[grades['gp'] > 20].describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>17.000000</td>\n      <td>17.000000</td>\n      <td>17.000000</td>\n      <td>17.000000</td>\n      <td>17.000000</td>\n      <td>17.000000</td>\n      <td>17.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>3.764706</td>\n      <td>2.470588</td>\n      <td>22.882353</td>\n      <td>15.705882</td>\n      <td>3.470588</td>\n      <td>3.294118</td>\n      <td>24.235294</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.714986</td>\n      <td>1.374666</td>\n      <td>5.206755</td>\n      <td>6.192381</td>\n      <td>1.545867</td>\n      <td>1.686887</td>\n      <td>2.077541</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>9.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>21.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>4.000000</td>\n      <td>2.000000</td>\n      <td>23.000000</td>\n      <td>14.000000</td>\n      <td>3.000000</td>\n      <td>3.000000</td>\n      <td>22.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4.000000</td>\n      <td>3.000000</td>\n      <td>24.000000</td>\n      <td>17.000000</td>\n      <td>4.000000</td>\n      <td>4.000000</td>\n      <td>24.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>5.000000</td>\n      <td>3.000000</td>\n      <td>26.000000</td>\n      <td>20.000000</td>\n      <td>5.000000</td>\n      <td>5.000000</td>\n      <td>25.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>5.000000</td>\n      <td>4.000000</td>\n      <td>28.000000</td>\n      <td>24.000000</td>\n      <td>5.000000</td>\n      <td>5.000000</td>\n      <td>28.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":27}},"cell_type":"code","exec_count":27}
{"type":"cell","id":"7f89d4","pos":13,"input":"# Just giving a name slices out the column\ndf['A']   ","output":{"0":{"data":{"text/plain":"2017-01-01    0.958136\n2017-01-02    1.956253\n2017-01-03   -0.949197\n2017-01-04   -0.877255\n2017-01-05    0.667658\n2017-01-06   -0.525167\n2017-01-07    0.672892\n2017-01-08    1.525857\n2017-01-09   -1.435654\n2017-01-10    0.867699\nFreq: D, Name: A, dtype: float64"},"output_type":"execute_result","exec_count":11}},"cell_type":"code","exec_count":11}
{"type":"cell","id":"54d4b4","pos":29,"input":"# Using a list\n# First list is from the index\n# Second list if from the column labels\n\ngrades.loc[['Ng', 'Ve', 'Ya'], 'hw_pass':'lt_e']","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":23}},"cell_type":"code","exec_count":23}
{"type":"cell","id":"7c1375","pos":9,"input":"grades.iloc[10]","output":{"0":{"data":{"text/plain":"hw_pass     5\nhw_e        3\nlt_pass    25\nlt_e       17\npp_pass     5\npp_e        5\ngp         22\nName: Ga, dtype: int64"},"output_type":"execute_result","exec_count":8}},"cell_type":"code","exec_count":8}
{"type":"cell","id":"bfa3ca","pos":12,"input":"dates = pd.date_range('1/1/2017', periods = 10)\ndf = pd.DataFrame(np.random.randn(10,4), index = dates, columns = ['A', 'B', 'C', 'D'])\n\ndf","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-01-01</th>\n      <td>0.958136</td>\n      <td>1.938955</td>\n      <td>-1.655659</td>\n      <td>1.372844</td>\n    </tr>\n    <tr>\n      <th>2017-01-02</th>\n      <td>1.956253</td>\n      <td>-0.543414</td>\n      <td>1.574555</td>\n      <td>-1.063261</td>\n    </tr>\n    <tr>\n      <th>2017-01-03</th>\n      <td>-0.949197</td>\n      <td>-1.258297</td>\n      <td>1.242756</td>\n      <td>0.084331</td>\n    </tr>\n    <tr>\n      <th>2017-01-04</th>\n      <td>-0.877255</td>\n      <td>-1.226532</td>\n      <td>0.160670</td>\n      <td>1.614422</td>\n    </tr>\n    <tr>\n      <th>2017-01-05</th>\n      <td>0.667658</td>\n      <td>0.335953</td>\n      <td>-0.796132</td>\n      <td>-0.002407</td>\n    </tr>\n    <tr>\n      <th>2017-01-06</th>\n      <td>-0.525167</td>\n      <td>1.244997</td>\n      <td>0.977835</td>\n      <td>0.976571</td>\n    </tr>\n    <tr>\n      <th>2017-01-07</th>\n      <td>0.672892</td>\n      <td>0.095643</td>\n      <td>0.113786</td>\n      <td>0.514653</td>\n    </tr>\n    <tr>\n      <th>2017-01-08</th>\n      <td>1.525857</td>\n      <td>-0.729438</td>\n      <td>0.567731</td>\n      <td>1.181354</td>\n    </tr>\n    <tr>\n      <th>2017-01-09</th>\n      <td>-1.435654</td>\n      <td>-0.867045</td>\n      <td>-0.016776</td>\n      <td>-1.033167</td>\n    </tr>\n    <tr>\n      <th>2017-01-10</th>\n      <td>0.867699</td>\n      <td>-0.014276</td>\n      <td>0.009655</td>\n      <td>0.606679</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":10}},"cell_type":"code","exec_count":10}
{"type":"cell","id":"92ac38","pos":28,"input":"# Can also set \n\ngrades2 = grades.copy()\ngrades2.loc['St']['gp'] = 999\ngrades2[15:]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>999</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n      <td>22</td>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":22}},"cell_type":"code","exec_count":22}
{"type":"cell","id":"ad717d","pos":62,"input":"## Set/reset index","cell_type":"markdown"}
{"type":"cell","id":"d4049b","pos":34,"input":"# Compare average number of homeworks passed for students whose Guided Practice scores are above\n# 20, with those whose Guided Practice scores are below 20\n\nprint(grades[grades['gp'] > 20].mean()['hw_pass'])\nprint(grades[grades['gp'] < 20].mean()['hw_pass'])","output":{"0":{"name":"stdout","output_type":"stream","text":"3.76470588235\n2.2\n"}},"cell_type":"code","exec_count":28}
{"type":"cell","id":"caab5d","pos":6,"input":"# Boolean array\n\n# All students with fewer than 3 E's on homework \ngrades.loc[grades.hw_e < 3]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>20</td>\n      <td>3</td>\n      <td>3</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>0</td>\n      <td>11</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":6}},"cell_type":"code","exec_count":6}
{"type":"cell","id":"e75823","pos":5,"input":"grades.loc['Fl':'Va']","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>28</td>\n      <td>24</td>\n      <td>5</td>\n      <td>5</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":5}},"cell_type":"code","exec_count":5}
{"type":"file","last_load":1514473581768}
{"type":"cell","id":"c93f51","pos":45,"input":"## Selecting random samples \n\nUse the `.sample()` method on Series or DataFrames. It samples rows by default.","cell_type":"markdown"}
{"type":"cell","id":"4b19e0","pos":7,"input":"grades[grades.gp == 20]  # Exactly 20 points on Guided Practice","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":7}},"cell_type":"code","exec_count":7}
{"type":"cell","id":"7bd4f8","pos":19,"input":"# Or add a row to a data frame by giving a dictionary\n\ndf.iloc[1] = dict(A = 1, B = 2, C = 3, D = 99)\ndf","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-01-01</th>\n      <td>0.958136</td>\n      <td>1.938955</td>\n      <td>-1.655659</td>\n      <td>1.372844</td>\n    </tr>\n    <tr>\n      <th>2017-01-02</th>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>3.000000</td>\n      <td>99.000000</td>\n    </tr>\n    <tr>\n      <th>2017-01-03</th>\n      <td>-0.949197</td>\n      <td>-1.258297</td>\n      <td>1.242756</td>\n      <td>0.084331</td>\n    </tr>\n    <tr>\n      <th>2017-01-04</th>\n      <td>-0.877255</td>\n      <td>-1.226532</td>\n      <td>0.160670</td>\n      <td>1.614422</td>\n    </tr>\n    <tr>\n      <th>2017-01-05</th>\n      <td>0.667658</td>\n      <td>0.335953</td>\n      <td>-0.796132</td>\n      <td>-0.002407</td>\n    </tr>\n    <tr>\n      <th>2017-01-06</th>\n      <td>-0.525167</td>\n      <td>1.244997</td>\n      <td>0.977835</td>\n      <td>0.976571</td>\n    </tr>\n    <tr>\n      <th>2017-01-07</th>\n      <td>0.672892</td>\n      <td>0.095643</td>\n      <td>0.113786</td>\n      <td>0.514653</td>\n    </tr>\n    <tr>\n      <th>2017-01-08</th>\n      <td>1.525857</td>\n      <td>-0.729438</td>\n      <td>0.567731</td>\n      <td>1.181354</td>\n    </tr>\n    <tr>\n      <th>2017-01-09</th>\n      <td>-1.435654</td>\n      <td>-0.867045</td>\n      <td>-0.016776</td>\n      <td>-1.033167</td>\n    </tr>\n    <tr>\n      <th>2017-01-10</th>\n      <td>0.867699</td>\n      <td>-0.014276</td>\n      <td>0.009655</td>\n      <td>0.606679</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":16}},"cell_type":"code","exec_count":16}
{"type":"cell","id":"39441e","pos":24,"input":"## Selection by label\n\nLiterally \"label\" = the row label. Mostly this is done with `.loc` and `.iloc`","cell_type":"markdown"}
{"type":"cell","id":"b1454c","pos":56,"input":"grades.where(grades.lt_e < 2)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>17.0</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":44}},"cell_type":"code","exec_count":44}
{"type":"cell","id":"021883","pos":2,"input":"## Different ways to index and select\n\nUsing `.loc`:\n\n- Single label (`df.loc['Label']`)\n- List or array of labels (`df.loc[['a','b','c']]`)\n- Slice object (`df.loc['a':'f']` -- note both beginning and end are included unlike usual slicing) (BUT see below)\n- Boolean array (`df.loc[True, True, False]`)\n- Callable function ","cell_type":"markdown"}
{"type":"cell","id":"95c8a2","pos":51,"input":"But we can also throw in Boolean operators","cell_type":"markdown"}
{"type":"cell","id":"b140df","pos":25,"input":"grades.loc['Ng']","output":{"0":{"data":{"text/plain":"hw_pass     4\nhw_e        2\nlt_pass    23\nlt_e       16\npp_pass     3\npp_e        3\ngp         19\nName: Ng, dtype: int64"},"output_type":"execute_result","exec_count":19}},"cell_type":"code","exec_count":19}
{"type":"cell","id":"d36f8e","pos":31,"input":"# With a boolean array\n\n# Gives all the COLUMNS in which student Ng scored more than 20 \ngrades.loc['Ng'] > 20","output":{"0":{"data":{"text/plain":"hw_pass    False\nhw_e       False\nlt_pass     True\nlt_e       False\npp_pass    False\npp_e       False\ngp         False\nName: Ng, dtype: bool"},"output_type":"execute_result","exec_count":25}},"cell_type":"code","exec_count":25}
{"type":"cell","id":"7301bf","pos":39,"input":"grades.iloc[[0,10,20], 3:]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":32}},"cell_type":"code","exec_count":32}
{"type":"cell","id":"60b517","pos":52,"input":"# | means or\n# Mind the parentheses\n\ngrades[(grades.lt_e < 10) | (grades.hw_e < 2)]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>0</td>\n      <td>11</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":41}},"cell_type":"code","exec_count":41,"scrolled":true}
{"type":"cell","id":"8f3afb","pos":63,"input":"grades.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":50}},"cell_type":"code","exec_count":50}
{"type":"cell","id":"9bd079","pos":60,"input":"## Index objects\n\nIndexes are actual objects in a class `Index`. They behave like multisets (duplicates allowed). ","cell_type":"markdown"}
{"type":"cell","id":"35c212","pos":10,"input":"grades.iloc[10:20]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":9}},"cell_type":"code","exec_count":9}
{"type":"cell","id":"35cb4a","pos":38,"input":"grades.iloc[1:5, 2:4]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Bl</th>\n      <td>21</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>26</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>21</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>23</td>\n      <td>17</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":31}},"cell_type":"code","exec_count":31}
{"type":"cell","id":"0e4c22","pos":23,"input":"So basically this is an abbreviation for `.iloc`\n\n`df[a:b] == df.iloc[a:b]`","cell_type":"markdown"}
{"type":"cell","id":"52ae5b","pos":46,"input":"# Basically this just randomly selects a row\nprint(grades.sample())\n\n# This randomly selects 5 rows \nprint(grades.sample(n=5))\n\n# This randomly samples 1/10 of the data\nprint(grades.sample(frac=0.10))\n\n# This samples with replacement\nprint(grades.sample(n = 10, replace=True))","output":{"0":{"name":"stdout","output_type":"stream","text":"    hw_pass  hw_e  lt_pass  lt_e  pp_pass  pp_e  gp\nSc        5     3       24    19        4     4  26\n    hw_pass  hw_e  lt_pass  lt_e  pp_pass  pp_e  gp\nFl        5     4       28    24        5     5  24\nNg        4     2       23    16        3     3  19\nDy        0     0       11     4        1     0  21\nVa        3     1       13     4        0     0  20\nLi        5     4       26    17        5     5  19\n    hw_pass  hw_e  lt_pass  lt_e  pp_pass  pp_e  gp\nDi        4     2       26    20        3     3  28\nNg        4     2       23    16        3     3  19\n    hw_pass  hw_e  lt_pass  lt_e  pp_pass  pp_e  gp\nMa        5     2       24    11        5     5  23\nBl        2     1       21    12        3     3  18\nLi        5     4       26    17        5     5  19\nCo        4     2       21    14        0     0  24\nFl        5     4       28    24        5     5  24\nMa        5     2       24    11        5     5  23\nYa        5     4       27    21        5     5  25\nYa        5     4       27    21        5     5  25\nBr        4     2       26    17        4     4  28\nSc        5     3       24    19        4     4  26\n"}},"cell_type":"code","exec_count":37}
{"type":"cell","id":"a664ae","pos":36,"input":"## Selection by position \n\nThis is what `.iloc` is for. ","cell_type":"markdown"}
{"type":"cell","id":"67f986","pos":26,"input":"grades.loc['Ng':'St']","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":20}},"cell_type":"code","exec_count":20}
{"type":"cell","id":"4998df","pos":30,"input":"# Slices in both directions\n\ngrades.loc['Ng':, 'hw_e':]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Ng</th>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>4</td>\n      <td>25</td>\n      <td>22</td>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":24}},"cell_type":"code","exec_count":24}
{"type":"cell","id":"76ec78","pos":43,"input":"# Return data for students whose \"E\" scores total up to more than 10\n\ngrades[lambda grades: grades.hw_e + grades.lt_e > 10]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>20</td>\n      <td>3</td>\n      <td>3</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4</td>\n      <td>3</td>\n      <td>22</td>\n      <td>15</td>\n      <td>4</td>\n      <td>4</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>28</td>\n      <td>24</td>\n      <td>5</td>\n      <td>5</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n      <td>22</td>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":35}},"cell_type":"code","exec_count":35}
{"type":"cell","id":"4a52ef","pos":35,"input":"# Getting a specific value:\n\ngrades.loc['Ng', 'gp']","output":{"0":{"data":{"text/plain":"19"},"output_type":"execute_result","exec_count":29}},"cell_type":"code","exec_count":29}
{"type":"cell","id":"de8fc7","pos":15,"input":"# Can also pass a list of columns -- still not using .loc\n\ndf[['B', 'D']]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>B</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-01-01</th>\n      <td>1.938955</td>\n      <td>1.372844</td>\n    </tr>\n    <tr>\n      <th>2017-01-02</th>\n      <td>-0.543414</td>\n      <td>-1.063261</td>\n    </tr>\n    <tr>\n      <th>2017-01-03</th>\n      <td>-1.258297</td>\n      <td>0.084331</td>\n    </tr>\n    <tr>\n      <th>2017-01-04</th>\n      <td>-1.226532</td>\n      <td>1.614422</td>\n    </tr>\n    <tr>\n      <th>2017-01-05</th>\n      <td>0.335953</td>\n      <td>-0.002407</td>\n    </tr>\n    <tr>\n      <th>2017-01-06</th>\n      <td>1.244997</td>\n      <td>0.976571</td>\n    </tr>\n    <tr>\n      <th>2017-01-07</th>\n      <td>0.095643</td>\n      <td>0.514653</td>\n    </tr>\n    <tr>\n      <th>2017-01-08</th>\n      <td>-0.729438</td>\n      <td>1.181354</td>\n    </tr>\n    <tr>\n      <th>2017-01-09</th>\n      <td>-0.867045</td>\n      <td>-1.033167</td>\n    </tr>\n    <tr>\n      <th>2017-01-10</th>\n      <td>-0.014276</td>\n      <td>0.606679</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":13}},"cell_type":"code","exec_count":13}
{"type":"cell","id":"c1ea7f","pos":8,"input":"Using `.iloc`: \n\n- Single integer\n- List or array of integers\n- Slice object with ints\n- Boolean array\n- Callable function ","cell_type":"markdown"}
{"type":"cell","id":"b7f891","pos":55,"input":"## The `where` method and masking\n\n`where` does pretty much the same thing as the boolean selection but it keeps the shape of the series/DataFrame the same and sticks `NaN` anywhere that wouldn't have been selected.","cell_type":"markdown"}
{"type":"cell","id":"5c2c0f","pos":50,"input":"# Shows the students with fewer than 10 E's on learning target assessments\ngrades[grades.lt_e < 10]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>0</td>\n      <td>11</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":40}},"cell_type":"code","exec_count":40}
{"type":"cell","id":"2ee756","pos":32,"input":"# Gives all the ROWS in which the value in column gp is greater than 20\n# **** .loc always gives rows ****\ngrades['gp'] > 20","output":{"0":{"data":{"text/plain":"Am     True\nBl    False\nBr     True\nCo     True\nCr    False\nDi     True\nDu     True\nDy     True\nFl     True\nFr    False\nGa     True\nHe     True\nLi    False\nMc     True\nMa     True\nNg    False\nSc     True\nSh     True\nSt    False\nVa    False\nVe     True\nWa     True\nYa     True\nZi     True\nName: gp, dtype: bool"},"output_type":"execute_result","exec_count":26}},"cell_type":"code","exec_count":26}
{"type":"cell","id":"d26357","pos":59,"input":"grades.mask(grades.lt_e < 2)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>27.0</td>\n      <td>17.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>26.0</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>21.0</td>\n      <td>12.0</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>18.0</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4.0</td>\n      <td>2.0</td>\n      <td>26.0</td>\n      <td>17.0</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>28.0</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4.0</td>\n      <td>2.0</td>\n      <td>21.0</td>\n      <td>14.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>23.0</td>\n      <td>17.0</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4.0</td>\n      <td>2.0</td>\n      <td>26.0</td>\n      <td>20.0</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>28.0</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>22.0</td>\n      <td>15.0</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>11.0</td>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>21.0</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5.0</td>\n      <td>4.0</td>\n      <td>28.0</td>\n      <td>24.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>25.0</td>\n      <td>17.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>23.0</td>\n      <td>17.0</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5.0</td>\n      <td>4.0</td>\n      <td>26.0</td>\n      <td>17.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>19.0</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>24.0</td>\n      <td>11.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>23.0</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4.0</td>\n      <td>2.0</td>\n      <td>23.0</td>\n      <td>16.0</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>19.0</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>24.0</td>\n      <td>19.0</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>26.0</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>23.0</td>\n      <td>15.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3.0</td>\n      <td>1.0</td>\n      <td>13.0</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>25.0</td>\n      <td>22.0</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5.0</td>\n      <td>4.0</td>\n      <td>25.0</td>\n      <td>22.0</td>\n      <td>5.0</td>\n      <td>4.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5.0</td>\n      <td>4.0</td>\n      <td>27.0</td>\n      <td>21.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>23.0</td>\n      <td>11.0</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>22.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":46}},"cell_type":"code","exec_count":46}
{"type":"cell","id":"d9cc4c","pos":20,"input":"## Slicing ranges\n\nIn a DataFrame, slicing inside `[]` slices __rows__ --- even though putting in just a single value without slicing would give columns. ","cell_type":"markdown"}
{"type":"cell","id":"75d3f1","pos":58,"input":"`mask` is the inverse of `where`:","cell_type":"markdown"}
{"type":"cell","id":"61f299","pos":54,"input":"# ~ is \"not\"\n\ngrades[(grades.lt_e > 10) & ~(grades.hw_e == 2)]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4</td>\n      <td>3</td>\n      <td>22</td>\n      <td>15</td>\n      <td>4</td>\n      <td>4</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>28</td>\n      <td>24</td>\n      <td>5</td>\n      <td>5</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n      <td>22</td>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":43}},"cell_type":"code","exec_count":43}
{"type":"cell","id":"a0b083","pos":57,"input":"grades.where(grades < 10)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>4</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>4</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9.0</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>4</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5</td>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>4</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":45}},"cell_type":"code","exec_count":45}
{"type":"cell","id":"2491c7","pos":48,"input":"## Boolean indexing\n\nSome of this we already saw:","cell_type":"markdown"}
{"type":"cell","id":"f9b137","pos":4,"input":"grades.loc[['Dy', 'Ya']]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>0</td>\n      <td>11</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":4}},"cell_type":"code","exec_count":4}
{"type":"cell","id":"70ad19","pos":44,"input":"grades[grades.hw_e + grades.lt_e > 10]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>20</td>\n      <td>3</td>\n      <td>3</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4</td>\n      <td>3</td>\n      <td>22</td>\n      <td>15</td>\n      <td>4</td>\n      <td>4</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>28</td>\n      <td>24</td>\n      <td>5</td>\n      <td>5</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n      <td>22</td>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>1</td>\n      <td>0</td>\n      <td>23</td>\n      <td>11</td>\n      <td>3</td>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":36}},"cell_type":"code","exec_count":36}
{"type":"cell","id":"b94c24","pos":16,"input":"## Attribute access","cell_type":"markdown"}
{"type":"cell","id":"2887b0","pos":3,"input":"grades.loc['Dy']","output":{"0":{"data":{"text/plain":"hw_pass     0\nhw_e        0\nlt_pass    11\nlt_e        4\npp_pass     1\npp_e        0\ngp         21\nName: Dy, dtype: int64"},"output_type":"execute_result","exec_count":3}},"cell_type":"code","exec_count":3}
{"type":"cell","id":"011440","pos":22,"input":"grades[10:20]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>3</td>\n      <td>1</td>\n      <td>13</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":18}},"cell_type":"code","exec_count":18}
{"type":"cell","id":"f15eee","pos":14,"input":"# Item in position 5 of column A\ndf['A'][5]","output":{"0":{"data":{"text/plain":"-0.52516708568713011"},"output_type":"execute_result","exec_count":12}},"cell_type":"code","exec_count":12}
{"type":"cell","id":"7920e3","pos":47,"input":"# Sample columns = change axis \n\ngrades.sample(n=2, axis = 1)","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>3</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>1</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>2</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>2</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>1</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>2</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Dy</th>\n      <td>0</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>4</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Fr</th>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>3</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>4</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Mc</th>\n      <td>0</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>2</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>2</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>3</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>St</th>\n      <td>0</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Va</th>\n      <td>1</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Zi</th>\n      <td>0</td>\n      <td>22</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":38}},"cell_type":"code","exec_count":38}
{"type":"cell","id":"bb8ba8","pos":53,"input":"# & is and \n\ngrades[(grades.hw_e >= 2) & (grades.lt_e >= 3) ]","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Di</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>20</td>\n      <td>3</td>\n      <td>3</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Du</th>\n      <td>4</td>\n      <td>3</td>\n      <td>22</td>\n      <td>15</td>\n      <td>4</td>\n      <td>4</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Fl</th>\n      <td>5</td>\n      <td>4</td>\n      <td>28</td>\n      <td>24</td>\n      <td>5</td>\n      <td>5</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Ga</th>\n      <td>5</td>\n      <td>3</td>\n      <td>25</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>He</th>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Li</th>\n      <td>5</td>\n      <td>4</td>\n      <td>26</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Ma</th>\n      <td>5</td>\n      <td>2</td>\n      <td>24</td>\n      <td>11</td>\n      <td>5</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>Ng</th>\n      <td>4</td>\n      <td>2</td>\n      <td>23</td>\n      <td>16</td>\n      <td>3</td>\n      <td>3</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>Sc</th>\n      <td>5</td>\n      <td>3</td>\n      <td>24</td>\n      <td>19</td>\n      <td>4</td>\n      <td>4</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Sh</th>\n      <td>4</td>\n      <td>4</td>\n      <td>23</td>\n      <td>15</td>\n      <td>2</td>\n      <td>1</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ve</th>\n      <td>4</td>\n      <td>3</td>\n      <td>25</td>\n      <td>22</td>\n      <td>3</td>\n      <td>3</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Wa</th>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n      <td>22</td>\n      <td>5</td>\n      <td>4</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>Ya</th>\n      <td>5</td>\n      <td>4</td>\n      <td>27</td>\n      <td>21</td>\n      <td>5</td>\n      <td>5</td>\n      <td>25</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":42}},"cell_type":"code","exec_count":42}
{"type":"cell","id":"677591","pos":17,"input":"# Can get indices directly as attributes: \n\nprint(grades.hw_pass)\nprint(df.B)","output":{"0":{"name":"stdout","output_type":"stream","text":"Am    5\nBl    2\nBr    4\nCo    4\nCr    4\nDi    4\nDu    4\nDy    0\nFl    5\nFr    0\nGa    5\nHe    4\nLi    5\nMc    0\nMa    5\nNg    4\nSc    5\nSh    4\nSt    0\nVa    3\nVe    4\nWa    5\nYa    5\nZi    1\nName: hw_pass, dtype: int64\n2017-01-01    1.938955\n2017-01-02   -0.543414\n2017-01-03   -1.258297\n2017-01-04   -1.226532\n2017-01-05    0.335953\n2017-01-06    1.244997\n2017-01-07    0.095643\n2017-01-08   -0.729438\n2017-01-09   -0.867045\n2017-01-10   -0.014276\nFreq: D, Name: B, dtype: float64\n"}},"cell_type":"code","exec_count":14}
{"type":"cell","id":"638ea0","pos":49,"input":"grades.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":39}},"cell_type":"code","exec_count":39}
{"type":"cell","id":"4a5ae9","pos":64,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"5b1599","pos":11,"input":"## Basics","cell_type":"markdown"}
{"type":"cell","id":"0a902a","pos":1,"input":"# Import stuff\n# Create sample data frame from old MTH 225 gradebook\n# (Student last names redacted to first two letters for privacy)\n\nimport numpy as np\nimport pandas as pd\n\n# index_col = 0 forces the leftmost column to be the index\n# Otherwise the index is 0,1,2,...\ngrades = pd.read_csv('225-gradebook.csv', index_col=0)\n\ngrades.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hw_pass</th>\n      <th>hw_e</th>\n      <th>lt_pass</th>\n      <th>lt_e</th>\n      <th>pp_pass</th>\n      <th>pp_e</th>\n      <th>gp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Am</th>\n      <td>5</td>\n      <td>3</td>\n      <td>27</td>\n      <td>17</td>\n      <td>5</td>\n      <td>5</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>Bl</th>\n      <td>2</td>\n      <td>1</td>\n      <td>21</td>\n      <td>12</td>\n      <td>3</td>\n      <td>3</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Br</th>\n      <td>4</td>\n      <td>2</td>\n      <td>26</td>\n      <td>17</td>\n      <td>4</td>\n      <td>4</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>Co</th>\n      <td>4</td>\n      <td>2</td>\n      <td>21</td>\n      <td>14</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>Cr</th>\n      <td>4</td>\n      <td>1</td>\n      <td>23</td>\n      <td>17</td>\n      <td>3</td>\n      <td>3</td>\n      <td>20</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":2}},"cell_type":"code","exec_count":2}
{"type":"cell","id":"df30a8","pos":40,"input":"# Cross section of a single student \ngrades.iloc[1]","output":{"0":{"data":{"text/plain":"hw_pass     2\nhw_e        1\nlt_pass    21\nlt_e       12\npp_pass     3\npp_e        3\ngp         18\nName: Bl, dtype: int64"},"output_type":"execute_result","exec_count":33}},"cell_type":"code","exec_count":33}